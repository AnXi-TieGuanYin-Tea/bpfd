Check the issue tracker for all issues.

BPFd uprobes support is a work in progress for ARM64 remotes
------------------------------------------------------------
To test basic uprobes support, I used a Pixel 2 device running
4.4 kernel with patches backported for Uprobes support:
https://github.com/joelagnel/linux/tree/uprobes-4.4-wahoo

and, used perf to create probes on a simple program.

First crossbuild perf statically, checkout upstream kernel and run:
CROSS_COMPILE=aarch64-linux-gnu- ARCH=arm64 LDFLAGS=-static make V=1

Weird quirks with static building of perf:
- First run has to be done non-statically and then with the LDFLAGS=-static
  parameter for libdw_dwarfunwind to be enabled.

- Even if lzma support isn't there, it causes linker to pass -llzma to linker
  causing static builds to fail. For this I had to say V=1, and remove the
  lzma param to the linker

Test program:
#include <stdio.h>

void  __attribute__ ((noinline)) foo2() {
        printf("foo2!\n");
}

void  __attribute__ ((noinline)) foo1() {
        foo2();
        printf("foo1\n");
}

void main() {
        foo1();
}

Create a probe:
./perf probe -x /data/test -a foo2
Record:
./perf record -e probe_test:foo2 -a sleep 2
Report probe results:
./perf script

